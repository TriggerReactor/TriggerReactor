name: Java CI

on:
  push:
    tags: 
      - '*-Release'

jobs:
  test_windows:
    runs-on: windows-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test in windows environment
        run: ./gradlew test

  test_ubuntu:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test in ubuntu environment
        run: ./gradlew test

  test_ubuntu_jdk15:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '15'

      - name: Test in ubuntu environment
        run: ./gradlew test

  test_ubuntu_jdk8:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '8'

      - name: Test in ubuntu environment
        run: ./gradlew testLegacy -PLegacy

  build:
    needs: [ test_windows, test_ubuntu, test_ubuntu_jdk8, test_ubuntu_jdk15 ]
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show status
        run: |
          echo event=${{ github.event_name }}
          echo action=${{ github.event.action }}
          echo ref=${{ github.ref }}
          echo merge=${{ github.event.pull_request.merged }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build javadoc -x test -Pversion=${GITHUB_REF#refs/*/}
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-release

  to_release:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    strategy:
      matrix:
        file_name:
          - bukkit-latest
          - bukkit-legacy
          - sponge

    steps:
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        continue-on-error: true
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/libs/TriggerReactor-${{matrix.file_name}}-*.jar
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  javadocs:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') }}

    steps:
      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: build
          key: ${{ runner.os }}-build-release
      - name: update javadoc
        continue-on-error: true
        run: |
          mkdir build/docs/tmp
          cd build/docs/tmp
          git config --global user.email "wysohn2002@naver.com"
          git config --global user.name "wysohn"
          git init
          git remote add origin https://x-access-token:${{ secrets.TRG_JAVADOC }}@github.com/TriggerReactor/TriggerReactor.github.io.git
          git config pull.rebase true   # rebase
          git pull origin master

          cp -rf ../javadoc/* ./
          git add *
          git commit -m "auto update from workflow"
          git push origin master
