plugins {
    id 'java'
    id 'groovy'
}

repositories {
    jcenter()
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    test {
        reports.html.enabled = false
    }

    ext {
        id = 'TriggerReactor'
        version = '3.2.3'
        description = 'Simple script parser with infinite possibility'
        author = 'wysohn'
        authors = [
                'soliddanii',
                'MidnightSugar',
                'TheBestNightSky',
                'dltks0306',
                'RubrumExPlaneta',
                'Alex4386',
                'RedLime',
                'mrandriyg',
                'professer_snape',
                'gerzytet'
        ]
    }


    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
                include '**/*.js'
                include '**/*.yml'
            }
        }

        test {
            java {
                srcDirs = ['src/test/java/']
            }
        }
    }

    repositories {
        jcenter()
        mavenCentral()

        //bstats
        maven {
            name = 'CodeMC'
            url = 'https://repo.codemc.org/repository/maven-public'
        }
    }

    dependencies {
        // https://mvnrepository.com/artifact/mysql/mysql-connector-java
        compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'

        // https://mvnrepository.com/artifact/mysql/mysql-connector-java
        compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'

        testCompile 'junit:junit:4.11'
        testCompile 'org.mockito:mockito-core:2.8.+'
        testCompile 'org.powermock:powermock-core:2.+'
        testCompile 'org.powermock:powermock-module-junit4:2.+'
        testCompile 'org.powermock:powermock-api-mockito2:2.+'
        testCompile 'org.javassist:javassist:3.20.0-GA'
    }

    java{
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    task copyResources(type: Copy) {
        from project(":core").sourceSets.main.output.resourcesDir
        into "${buildDir}/resources/main"
    }
    jar.dependsOn copyResources

    task copyJars(type: Copy) {
        from project.file('build/libs')
        include '*.jar'
        into rootProject.file('build/libs')
    }

    build.finalizedBy(copyJars)

    javadoc {
        failOnError false
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')

        exclude "**/copy/com/google/**"
        exclude "org/apache/**"
    }
}

def exportedProjects= [
        ":core",
        /*":sponge",*/
        ":bukkit",
        ":bukkit:legacy",
        ":bukkit:latest"
]

javadoc {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')

    source exportedProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
    options {
        links "https://docs.oracle.com/javase/8/docs/api/"
        links "https://hub.spigotmc.org/javadocs/bukkit/"
        links "https://jd.spongepowered.org/7.0.0/"
    }
    destinationDir = file("${buildDir}/docs/javadoc")
    exclude "**/copy/com/google/**"
    exclude "org/apache/**"
}
