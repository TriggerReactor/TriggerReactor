dependencies {
    implementation 'org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT'
}

allprojects {
    repositories {
        //maven {
        //    url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        //}
        maven {
            url "https://repo.papermc.io/repository/maven-public/"
        }
        //maven {
        //    url "http://nexus.hc.to/content/repositories/pub_releases/"
        //}
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    dependencies {
        api project(":core")

        testImplementation project(':core').sourceSets.test.output
    }

    jar {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE

        from {
            String[] include = [
                    "${project(':core').archivesBaseName}${project.version == "unspecified" ? "" : "-" + project.version}.jar",
                    "${project(':bukkit').archivesBaseName}${project.version == "unspecified" ? "" : "-" + project.version}.jar",
                    "commons-lang3-3.12.0.jar",
                    "guice-5.1.0.jar",
                    "guice-assistedinject-5.1.0.jar",
                    "javax.inject-1.jar",
                    "aopalliance-1.0.jar",
                    "mysql-connector-j-8.0.33.jar",
            ]

            configurations.runtimeClasspath
                    .findAll { include.contains(it.name) }
                    .collect { it.isDirectory() ? it : zipTree(it) }
        }

        dependsOn project(':core').jar
    }
}

subprojects {
    dependencies {
        implementation fileTree(dir: "libs", includes: ['*.jar'])
        implementation(project(":bukkit")) {
            exclude group: 'org.spigotmc', module: 'spigot-api'
        }

        testImplementation(project(':bukkit').sourceSets.test.output)
    }

    tasks.register('copyTestResources', Copy) {
        from project(":bukkit").sourceSets.main.output.resourcesDir
        into "${buildDir}/classes/test"
    }

    jar.dependsOn project(':bukkit').jar

    copyTestResources.dependsOn project(":bukkit").copyResources
    copyTestResources.dependsOn project(":bukkit").processResources

    processTestResources.dependsOn copyTestResources
}

test {
    // not for tests
    exclude '**/Abstract*.class'
}
