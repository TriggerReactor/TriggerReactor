buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.yaml:snakeyaml:1.8'
    }
}


import org.yaml.snakeyaml.DumperOptions
import org.yaml.snakeyaml.Yaml

task writePluginYml {
    DumperOptions options = new DumperOptions()
    options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK)
    options.setPrettyFlow(true)

    File file = new File("$projectDir/src/main/resources/plugin.yml")
    if (!file.exists()) {
        file.getParentFile().mkdirs()
        file.createNewFile()
    }

    InputStream input = new FileInputStream(file)
    Yaml yaml = new Yaml(options)
    Map<String, Object> map = yaml.load(input)
    input.close()

    if (map == null)
        map = new LinkedHashMap<String, Object>();

    String id = project.ext.id
    String desc = project.ext.description

    map.put("name", id)
    map.put("main", "io.github.wysohn.triggerreactor.bukkit.main.TriggerReactor")
    map.put("version", project.version)
    map.put("author", project.ext.author)
    map.put("authors", project.ext.authors)
    map.put("softdepend", [
            "Vault",
            "PlaceholderAPI",
            "mcMMO",
            "CoreProtect",
            "ProtocolLib",
            "WorldGuard",
            "NashornJs",
            "JShader"
    ])
    map.put("commands", new HashMap<String, Object>() {
        {
            put(id.toLowerCase(), new HashMap<String, Object>() {
                {
                    put("aliases", ["trg"])
                    put("description", desc)
                }
            })
        }
    })
    map.put("permissions", new HashMap<String, Object>() {
        {
            put(id.toLowerCase() + ".admin", new HashMap<String, Object>() {
                {
                    put("description", "Grant admin permission")
                }
            })
            put(id.toLowerCase() + ".see.exceptions", new HashMap<String, Object>() {
                {
                    put("description", "See exceptions")
                }
            })
        }
    })
    map.put("api-version", 1.13)

    FileWriter writer = new FileWriter(file)
    yaml.dump(map, writer)
    writer.close()
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'

    testImplementation 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'
}
